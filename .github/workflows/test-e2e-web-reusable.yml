name: Workflow template for testing e2e jobs
on:
  workflow_call:
    secrets:
      ETHERSCAN_API_KEY:
        required: true

env:
  FORCE_COLOR: 1

defaults:
  run:
    working-directory: ./packages/e2e

jobs:
  test-cli:
    runs-on: ubuntu-latest
    if: false # Disable this job for now
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: pnpm/action-setup@eae0cfeb286e66ffb5155f1a79b90583a127a68b # v2.4.1
      - uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: 20
          cache: "pnpm"
      - run: pnpm install
      - run: cd ../../apps/cli && pnpm build
      - run: cp .env.example .env
      - env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        run: pnpm test:cli

  test-e2e-web:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: webapp
        ports:
          - 5432:5432
    env:
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
      HEADLESS: false
      WALLET_CONNECT_PROJECT_ID: placeholder
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          submodules: recursive
      - uses: pnpm/action-setup@eae0cfeb286e66ffb5155f1a79b90583a127a68b # v2.4.1
      - uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: 20
          cache: "pnpm"
      - run: pnpm install
      - run: pnpm playwright install --with-deps chromium
      - run: cd ../contracts && pnpm build
      - run: pnpm test:web:env:up
      - run: xvfb-run pnpm playwright test
      - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: packages/e2e/playwright-report/
          retention-days: 30
      - if: always()
        run: pnpm test:web:env:down
      - name: App logs
        if: always()
        run: cat ./logs/app.log
      - name: Main node logs
        if: always()
        run: cat ./logs/main-node.log
      - name: Backup node logs
        if: always()
        run: cat ./logs/backup-node.log
